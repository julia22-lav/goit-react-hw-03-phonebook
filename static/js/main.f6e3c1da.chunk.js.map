{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","onChange","event","preventDefault","console","dir","currentTarget","value","currentState","upadateState","setState","onSubmit","props","reset","nameId","genId","telId","this","className","s","contactForm","htmlFor","labelForm","type","id","inputForm","pattern","buttonForm","Component","ContactListItem","deleteContact","listItem","onClick","buttonListItem","ContactList","contactsToShow","contacts","map","Filter","filterInputId","filterState","filterChange","labelFilter","inputFilter","App","filter","addNewContact","contact","includes","alert","prevState","normalizedFilter","toLowerCase","contactId","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e3c1da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3PrGJ\",\"labelForm\":\"ContactForm_labelForm__2cUqY\",\"inputForm\":\"ContactForm_inputForm__2xBEi\",\"buttonForm\":\"ContactForm_buttonForm__2CBHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__23e4b\",\"buttonListItem\":\"ContactListItem_buttonListItem__2sFkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelFilter\":\"Filter_labelFilter__GBQBJ\",\"inputFilter\":\"Filter_inputFilter__3FEcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__odCeh\"};","import { Component } from 'react';\r\nimport { v4 as genId } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  onChange = event => {\r\n    event.preventDefault();\r\n    console.dir(event.currentTarget);\r\n    const { value, name } = event.currentTarget;\r\n    const currentState = this.state;\r\n    const upadateState = { [name]: value };\r\n    this.setState({ ...currentState, ...upadateState });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const nameId = genId();\r\n    const telId = genId();\r\n    return (\r\n      <form onSubmit={this.onSubmit} className={s.contactForm}>\r\n        <label htmlFor={nameId} className={s.labelForm}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={nameId}\r\n            value={this.state.name}\r\n            onChange={this.onChange}\r\n            className={s.inputForm}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={telId} className={s.labelForm}>\r\n          Tel\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={telId}\r\n            value={this.state.number}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            onChange={this.onChange}\r\n            className={s.inputForm}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.buttonForm}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nclass ContactListItem extends Component {\r\n  render() {\r\n    const { id, name, number, deleteContact } = this.props;\r\n    return (\r\n      <li id={id} className={s.listItem}>\r\n        {name}:{number}\r\n        <button\r\n          onClick={() => {\r\n            deleteContact(id);\r\n          }}\r\n          className={s.buttonListItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","import { Component } from 'react';\r\nimport ContactListItem from '../ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { contactsToShow, deleteContact } = this.props;\r\n    const contacts = contactsToShow();\r\n    return (\r\n      <ul>\r\n        {contacts.map(({ name, number, id }) => {\r\n          return (\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              key={id}\r\n              id={id}\r\n              deleteContact={deleteContact}\r\n              className={s.ContactList}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsToShow: PropTypes.func.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\r\nimport { v4 as genId } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    const filterInputId = genId();\r\n    const { filterState, filterChange } = this.props;\r\n\r\n    return (\r\n      <label htmlFor={filterInputId} className={s.labelFilter}>\r\n        Search Contacts by Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          id={filterInputId}\r\n          value={filterState}\r\n          onChange={filterChange}\r\n          className={s.inputFilter}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filters: PropTypes.string,\r\n  filterChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\nimport { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport { v4 as genId } from 'uuid';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(`contacts`));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = ({ name, number }) => {\n    const nameList = this.state.contacts.map(contact => contact.name);\n    if (nameList.includes(name)) {\n      alert(`${name} already in your contact list`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, { name, id: genId(), number }],\n    }));\n  };\n\n  contactsToShow = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) => {\n      return name ? name.toLowerCase().includes(normalizedFilter) : false;\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  filterChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter\n          filterState={this.state.filter}\n          filterChange={this.filterChange}\n        />\n        <ContactList\n          contactsToShow={this.contactsToShow}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}